import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup
from database import database
import os
import shutil
import json
import datetime

class admin_panel():
    def __init__(self, bot, text, token):
        self.bot = bot
        self.text = text
        self.token = token
        self.db = database()
        self.admin_apartment=admin_apartment(bot, text)
        self.admin_user = admin_user(bot, text)


    def check_user(self, message):
        names=[]
        for item in self.db.get_all("user"):
            if message.chat.id == item[0]:
                return self.db.edit(name="user", id=message.chat.id, data={"last_use":datetime.datetime.now()})
        #–ù–µ –Ω–∞—à–ª–æ—Å—å —Ç–∞–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        self.db.add_user(user={
            "id":message.chat.id,
            "phone":"",
            "name":message.from_user.username,
            "last_use":datetime.datetime.now()})
            


    def add_to_admin(self, message):
        self.db.add_admin({"id":message.chat.id, "contact":"@"+message.from_user.username})

    def check_on_admin(self,id):
        admin_list=self.db.get_column(name="admin", column="id")
        if id in admin_list:
            return True
        else:
            return False
    
    def get_password_admin(self, message):
        if self.check_on_admin(message.chat.id):
            self.main_admin_menu(message, back=False)
        else:
            self.bot.send_message(chat_id=message.chat.id, 
                                text="<b>–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞üëá</b>",
                                parse_mode="HTML")
        

    def main_admin_menu(self, message, back):
        kb = InlineKeyboardMarkup()
        b1 = InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã", callback_data="add-apartment")
        b2 = InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤", callback_data="show-apartment")
        b3 = InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤", callback_data="edit-apartment-start")
        b4 = InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã", callback_data="delete-apartment")
        b5 = InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="get-user-list")
        b6 = InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ", callback_data="delete-user-info")
        kb.add(b1).add(b2).add(b3).add(b4).add(b5).add(b6)

        if not(back):self.bot.send_message(chat_id=message.chat.id,
                                    reply_markup=kb, 
                                    text="<b>"+self.text["admin-panel-start"]+"</b>",
                                    parse_mode="HTML")
        #* callback->message
        else: self.bot.edit_message_text(chat_id = message.message.chat.id,
                                         message_id=message.message.message_id,
                                         text = "<b>"+self.text["admin-panel-start"]+"</b>",
                                         reply_markup=kb,
                                         parse_mode="HTML")



class admin_apartment():
    def __init__(self, bot, text):
        self.db = database()
        self.bot = bot
        self.msg={}
        self.old_text=text
        self.select={}
        self.apartments={}
        self.delete_apartments={}
        self.select_name={}
        self.photo_to_edit={}
        self.show_photo_img={}
        self.text = {
            "add-start":"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:",
            "add-2":"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ:",
            "add-3":"–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–æ–∑–æ–Ω:",
            "add-4":"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–î–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º –æ–¥–Ω—É –±—É–∫–≤—É):",
            "add-5":"–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:",
            "add-6":"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏(–±–µ–∑ —Å–∂–∞—Ç–∏—è/–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏):",
            "add-7-ok":"–û—Ç–ª–∏—á–Ω–æ! –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã.",
            "add-7-error":"–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã. –ù–µ—Ç—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.(–∏—Ö –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤)",

            "edit-1": "–í—ã–±–µ—Ä–∏—Ç–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—åüëá",
            "edit-2": "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—åüëá",
            "edit-3-type": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –∂–µ–ª–∞–µ—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—åüëá",
            "edit-3-location":"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—åüëá",
            "edit-3-sum":"–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –∂–µ–ª–∞–µ—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—åüëá",
            "edit-3-name":"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
            "edit-3-description":"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:",
            "edit-3-photo":"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏(–±–µ–∑ —Å–∂–∞—Ç–∏—è/–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏):",
            "edit-4-type":"–û—Ç–ª–∏—á–Ω–æ! —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω.",
            "edit-4-location":"–û—Ç–ª–∏—á–Ω–æ! —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.",
            "edit-4-sum":"–û—Ç–ª–∏—á–Ω–æ! —Ü–µ–Ω–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞.",
            "edit-4-name":"–û—Ç–ª–∏—á–Ω–æ! –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.",
            "edit-4-description":"–û—Ç–ª–∏—á–Ω–æ! –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.",
            "edit-4-photo":"–û—Ç–ª–∏—á–Ω–æ! —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω.",
            "show-1": "–í—ã–±–µ—Ä–∏—Ç–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—åüëá",
            "delete-1":"–í—ã–±–µ—Ä–∏—Ç–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—åüëá",
            "delete-2":"–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!"
        }
    
    #! —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤
    def add_to_photo_list(self, message, key):
        print(message.document)
        file_path = self.bot.get_file(message.document.file_id).file_path
        if key == "to-add":self.select[message.chat.id]["photo"].append(self.bot.download_file(file_path))
        elif key == "to-edit":
            print("to-edit")
            if message.chat.id not in self.photo_to_edit:
                self.photo_to_edit[message.chat.id]=[]
                print("create-id")
            self.photo_to_edit[message.chat.id].append(self.bot.download_file(file_path))
        
    def save_photo(self, list_photo, name):

        if not(os.path.exists(os.getcwd()+f"\\database_photo\\{name}")):
            os.mkdir(f"{os.getcwd()}\\database_photo\\{name}")
        k=0
        photo_dir=[]
        for img in list_photo:
            print(len(img))
            print(type(img))
            k+=1
            # print(img)
            # print(type(img))
            with open(f"{os.getcwd()}\\database_photo\\{name}\\{k}.png", "wb") as write:
                write.write(img)
            print(f'save to: {os.getcwd()}/database_photo/{name}/{k}.png')
            photo_dir.append(os.getcwd()+f"\\database_photo\\{name}\\{k}.png")
        return photo_dir
    

    def delete_photo_in_folder(self, folder):
        for filename in os.listdir(folder):
            file_path = os.path.join(folder, filename)
            try:
                if os.path.isfile(file_path) or os.path.islink(file_path):
                    os.unlink(file_path)
                elif os.path.isdir(file_path):
                    shutil.rmtree(file_path)
            except Exception as e:
                print('Failed to delete %s. Reason: %s' % (file_path, e))

    def add_apartment_start(self, callback):
        if callback.message.chat.id not in self.select:self.select[callback.message.chat.id]={"type":"",
                                                                                                "sum":"",
                                                                                                "location":"",
                                                                                                "name":"",
                                                                                                "description":"",
                                                                                                "photo":[]}
        kb = InlineKeyboardMarkup()
        b1 = InlineKeyboardButton(text="üè¢–ö–≤–∞—Ä—Ç–∏—Ä–∞", callback_data=f"admin-add-apartment")
        b2 = InlineKeyboardButton(text="üè†–î–æ–º", callback_data=f"admin-add-house")
        b3 = InlineKeyboardButton(text="üèõ–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", callback_data=f"admin-add-comm_apartment")
        b4 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="admin-back-to-main")
        kb.add(b1,b2).add(b3).add(b4)

        self.bot.edit_message_text(chat_id=callback.message.chat.id, 
                                    message_id=callback.message.message_id, 
                                    text = "<b>"+self.text["add-start"]+"</b>",
                                    reply_markup=kb,
                                    parse_mode="HTML")

    def add_apartment_2(self, callback):
        if callback.data !="admin-add-back-to-2":self.select[callback.message.chat.id]["type"]=callback.data.replace("admin-add-", "")
        
        kb = InlineKeyboardMarkup()
        b2 = InlineKeyboardButton(text="‚õ∞Ô∏è–í –≥–æ—Ä–∞—Ö", callback_data=f"admin-add-in_the_mountains")
        b1 = InlineKeyboardButton(text="üèñÔ∏è–£ –º–æ—Ä—è", callback_data=f"admin-add-by_the_sea")
        b3 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-add-back-to-1")
        kb.add(b1,b2).add(b3)
        self.bot.edit_message_text(chat_id = callback.message.chat.id, 
                                    message_id=callback.message.message_id, 
                                    text="<b>"+self.text["add-2"]+"</b>", 
                                    reply_markup=kb, 
                                    parse_mode="HTML")
    
    
    def add_apartment_3(self, callback):
        if callback.data !="admin-add-back-to-3":self.select[callback.message.chat.id]["location"] = callback.data.replace("admin-add-", "")
        text_button = [
            self.old_text["but-sum-apartment"],
            self.old_text["but-sum-house"],
            self.old_text["but-sum-comm_apartment"]
        ]
        if self.select[callback.message.chat.id]["type"]=="apartment":text_button = text_button[0]
        elif self.select[callback.message.chat.id]["type"]=="house":text_button = text_button[1]
        else:text_button = text_button[2]

        kb = InlineKeyboardMarkup()
        b1 = InlineKeyboardButton(text=text_button[0], 
                                  callback_data=f"admin-add-sum-1")
        b2 = InlineKeyboardButton(text=text_button[1], 
                                  callback_data=f"admin-add-sum-2")
        b3 = InlineKeyboardButton(text=text_button[2], 
                                  callback_data=f"admin-add-sum-3")
        if self.select[callback.message.chat.id]["type"]=="comm_apartment":kb.add(b1,b2);kb.add(b3)
        else:
            b4 = InlineKeyboardButton(text=text_button[3], callback_data=f"admin-add-sum-4")
            kb.add(b1,b2)
            kb.add(b3,b4)
        b5 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-add-back-to-2")
        kb.add(b5)
        self.bot.edit_message_text(chat_id = callback.message.chat.id, 
                                    message_id=callback.message.message_id, 
                                    text="<b>"+self.text["add-3"]+"</b>", 
                                    reply_markup=kb, 
                                    parse_mode="HTML")
    
    
    def add_apartment_4(self, callback):
        if callback.data !="admin-add-back-to-4": self.select[callback.message.chat.id]["sum"]=callback.data.replace("admin-add-","")
        kb = InlineKeyboardMarkup()
        b1 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-add-back-to-3")
        kb.add(b1)
        msg = self.bot.edit_message_text(chat_id = callback.message.chat.id, 
                                    message_id=callback.message.message_id, 
                                    text="<b>"+self.text["add-4"]+"</b>", 
                                    reply_markup=kb, 
                                    parse_mode="HTML")
        self.msg[callback.message.chat.id]=msg


    def add_apartment_5(self, message, back):
        if not(back):self.select[message.chat.id]["name"]=message.text     
        kb = InlineKeyboardMarkup()
        b1 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-add-back-to-4")
        kb.add(b1) 
        
        if not(back):           
            self.bot.send_message(chat_id = message.chat.id, 
                                    text="<b>"+self.text["add-5"]+"</b>", 
                                    reply_markup=kb, 
                                    parse_mode="HTML")
        else:
            self.bot.edit_message_text(chat_id=message.message.chat.id, 
                                    message_id=message.message.message_id, 
                                    text = "<b>"+self.text["add-5"]+"</b>",
                                    reply_markup=kb,
                                    parse_mode="HTML")
        

    def add_apartment_6(self, message):
        self.select[message.chat.id]["description"]=message.text     
        
        kb = InlineKeyboardMarkup()
        b1 = InlineKeyboardButton(text="–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã", callback_data="admin-add-load-photo-end")
        b2 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-add-back-to-5")
        
        kb.add(b1).add(b2)           
        msg = self.bot.send_message(chat_id = message.chat.id, 
                            text="<b>"+self.text["add-6"]+"</b>", 
                            reply_markup=kb, 
                            parse_mode="HTML")
        
        self.msg[message.chat.id]=msg
    
    def add_apartment_7(self, callback):#–ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        self.select[callback.message.chat.id]["photo"] = self.save_photo(self.select[callback.message.chat.id]["photo"], 
                                                                         self.select[callback.message.chat.id]["name"])
        
        self.db.add_apartment(self.select[callback.message.chat.id])
        
        self.select[callback.message.chat.id]={"type":"","sum":"","location":"","name":"","description":"","photo":[]}
        
        self.bot.send_message(chat_id=callback.message.chat.id, 
                              text="<b>"+self.text["add-7-ok" if self.select[callback.message.chat.id]["photo"]!=[] else "add-7-error"]+"</b>",
                              parse_mode="HTML")
        
        #–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º —Ñ–æ—Ç–æ–≥–≥—Ä–∞—Ñ–∏–π(—á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –Ω–µ –º–æ—Ä–≥–∞–ª–∞)
        kb = InlineKeyboardMarkup()
        b1 = InlineKeyboardButton(text="–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã", callback_data="None")
        b2 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"None")
        kb.add(b1).add(b2)           
        self.bot.edit_message_text(chat_id = callback.message.chat.id,
                            message_id = callback.message.message_id, 
                            text="<b>"+self.text["add-6"]+"</b>", 
                            reply_markup=kb, 
                            parse_mode="HTML")
        
    #!–û–∫–æ–Ω—á–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –¥–æ–±–æ–∞–≤–ª–µ–Ω–∏—è –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤

    #!–ù–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–π –∏–∑–º–µ–Ω–µ–Ω–∏—è
    def edit_apartment_start(self, callback):
        kb = InlineKeyboardMarkup()
        self.apartments[callback.message.chat.id] = {}
        for item in self.db.get_all(name="apartment"):
            self.apartments[callback.message.chat.id][item[0]] = {
                "name":item[0],
                "type":item[1],
                "location":item[2],
                "sum": item[3],
                "description":item[4],
                "photo":json.loads(item[5])
            }
        for item in self.apartments[callback.message.chat.id]:
            b = InlineKeyboardButton(text=f"{item}", callback_data=f"edit-apartment-this-name-{item}")
            kb.add(b)
        
        b = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="admin-back-to-main")
        kb.add(b)

        self.bot.edit_message_text(chat_id=callback.message.chat.id,
                                   message_id=callback.message.message_id,
                                   text="<b>"+self.text["edit-1"]+"</b>",
                                   reply_markup=kb, 
                                   parse_mode="HTML")
        
    
    def edit_apartment_2(self, callback):
        if not(callback.message.chat.id in self.select_name):
            self.select_name[callback.message.chat.id] = callback.data.replace("edit-apartment-this-name-", "")

        elif callback.data != "admin-edit-back-to-2":
            self.select_name[callback.message.chat.id] = callback.data.replace("edit-apartment-this-name-", "")
   
        kb = InlineKeyboardMarkup()
        b1 = InlineKeyboardButton(text="–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏", callback_data=f"edit-select-type")
        b2 = InlineKeyboardButton(text="–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏", callback_data=f"edit-select-location")
        b3 = InlineKeyboardButton(text="–¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω", callback_data=f"edit-select-sum")
        b4 = InlineKeyboardButton(text="–ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit-select-name")
        b5 = InlineKeyboardButton(text="–û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit-select-description")
        b6 = InlineKeyboardButton(text="–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", callback_data=f"edit-select-photo")
        
        kb.add(b1).add(b2).add(b3).add(b4).add(b5).add(b6)
        b = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="admin-edit-back-to-1")
        kb.add(b)

        self.bot.edit_message_text(chat_id=callback.message.chat.id,
                                   message_id=callback.message.message_id,
                                   text="<b>"+self.text["edit-2"]+"</b>",
                                   reply_markup=kb,
                                   parse_mode="HTML")
    
    def edit_apartment_3(self, callback):
        id = callback.data.split("-")[-1]

        if id == "location":#–∏–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø
            kb = InlineKeyboardMarkup() 
            b2 = InlineKeyboardButton(text="‚õ∞Ô∏è–í –≥–æ—Ä–∞—Ö", callback_data=f"admin-edit-3-in_the_mountains")
            b1 = InlineKeyboardButton(text="üèñÔ∏è–£ –º–æ—Ä—è", callback_data=f"admin-edit-3-by_the_sea")
            b3 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-edit-back-to-2")
            kb.add(b2, b1).add(b3)
            text = self.text["edit-3-location"]
        elif id == "type":
            kb = InlineKeyboardMarkup()
            b1 = InlineKeyboardButton(text="üè¢–ö–≤–∞—Ä—Ç–∏—Ä–∞", callback_data=f"admin-edit-3-apartment")
            b2 = InlineKeyboardButton(text="üè†–î–æ–º", callback_data=f"admin-edit-3-house")
            b3 = InlineKeyboardButton(text="üèõ–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", callback_data=f"admin-edit-3-comm_apartment")
            b4 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-edit-back-to-2")
            kb.add(b1,b2).add(b3).add(b4)
        
            text = self.text["edit-3-type"]
    
        elif id == "sum":
            text_button = [
            self.old_text["but-sum-apartment"],
            self.old_text["but-sum-house"],
            self.old_text["but-sum-comm_apartment"]
            ]
            select_type = self.apartments[
                                        callback.message.chat.id
                                            ][
                                            self.select_name[
                                                callback.message.chat.id
                                            ]
                                        ][
                                            "type"
                                        ]
            if select_type=="apartment":text_button = text_button[0]
            elif select_type=="house":text_button = text_button[1]
            else:text_button = text_button[2]

            kb = InlineKeyboardMarkup()
            b1 = InlineKeyboardButton(text=text_button[0], 
                                    callback_data=f"admin-edit-3-sum-1")
            b2 = InlineKeyboardButton(text=text_button[1], 
                                    callback_data=f"admin-edit-3-sum-2")
            b3 = InlineKeyboardButton(text=text_button[2], 
                                    callback_data=f"admin-edit-3-sum-3")
            if select_type=="comm_apartment":kb.add(b1,b2);kb.add(b3)
            else:
                b4 = InlineKeyboardButton(text=text_button[3], callback_data=f"admin-edit-3-sum-4")
                kb.add(b1,b2)
                kb.add(b3,b4)
            b5 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-edit-back-to-2")
            kb.add(b5)

            text = self.text["edit-3-sum"]
        
        elif id == "name":
            kb = InlineKeyboardMarkup()
            b5 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-edit-back-to-2")
            kb.add(b5)

            text = self.text["edit-3-name"]
        
        elif id == "description":
            kb = InlineKeyboardMarkup()
            b5 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-edit-back-to-2")
            kb.add(b5)

            text = self.text["edit-3-description"]

        elif id == "photo":
            kb = InlineKeyboardMarkup()
            b1 = InlineKeyboardButton(text="–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã", callback_data="admin-edit-photo-load-end")
            b2 = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"admin-edit-back-to-2")
            
            kb.add(b1).add(b2)
            text = self.text["edit-3-photo"]
        
        self.bot.edit_message_text(chat_id = callback.message.chat.id,
                                   message_id = callback.message.message_id,
                                   text = "<b>"+text+"</b>",
                                   reply_markup=kb,
                                   parse_mode="HTML")
    
    def edit_apartment_4(self, callback, key):
        if key in ["-apartment", "-house", "-comm_apartment"]:
            self.db.edit(name="apartment", id=self.select_name[callback.message.chat.id], data={"type":key[1:]})
            text = self.text["edit-4-type"]
        elif key in ["-in_the_mountains","-by_the_sea"]:
            self.db.edit(name="apartment", id=self.select_name[callback.message.chat.id], data={"location":key[1:]})
            text = self.text["edit-4-location"]
        elif key in ["-sum-1","-sum-2","-sum-3","-sum-4"]:
            self.db.edit(name="apartment", id=self.select_name[callback.message.chat.id], data={"sum":key[1:]})
            text = self.text["edit-4-sum"]
        elif key == "name":
            #  –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–µ—Ä–∏–∫—Ç–æ—Ä–∏–∏
            old_name = os.getcwd().replace("\\", "/")+f"/database_photo/{self.select_name[callback.chat.id]}"
            new_name = os.getcwd().replace("\\", "/")+f"/database_photo/{callback.text}"
            os.rename(old_name, new_name)
            self.select_name[callback.chat.id]=callback.text

            self.db.edit(name="apartment", id=self.select_name[callback.chat.id], data={"name":callback.text})
            text = self.text["edit-4-name"]
        elif key == "description":
            self.db.edit(name="apartment", id=self.select_name[callback.chat.id], data={"description":callback.text})
            text = self.text["edit-4-description"]
        elif key=="photo":
            # for i in self.photo_to_edit:print(f"{i=}")
            self.delete_photo_in_folder(f"{os.getcwd()}/database_photo/{self.select_name[callback.message.chat.id]}")
            self.photo_to_edit[callback.message.chat.id] = self.save_photo(self.photo_to_edit[callback.message.chat.id], 
                                                                         self.select_name[callback.message.chat.id])
        
            photo_in_text= json.dumps(self.photo_to_edit[callback.message.chat.id])
            

            self.db.edit(name="apartment", id=self.select_name[callback.message.chat.id], data={"photo":photo_in_text})
            self.photo_to_edit[callback.message.chat.id]=[]
            text = self.text["edit-4-photo"]
            print("ok")
        
        if key not in ["name","description"]:
            self.bot.edit_message_text(chat_id=callback.message.chat.id,
                                        message_id=callback.message.message_id,
                                        text = "<b>"+text+"</b>",
                                        parse_mode="HTML")
        elif key=="photo":
            self.bot.send_message(chat_id=callback.message.chat.id,
                                        text = "<b>"+text+"</b>",
                                        parse_mode="HTML")

        else:
            self.bot.send_message(chat_id=callback.chat.id,
                                        text = "<b>"+text+"</b>",
                                        parse_mode="HTML")



    def show_apartment_start(self, callback):

        self.apartments[callback.message.chat.id] = {}
        kb = InlineKeyboardMarkup()
        for item in database.get_all("None", name="apartment"):
            self.apartments[callback.message.chat.id][item[0]] = {
                "name":item[0],
                "type":item[1],
                "location":item[2],
                "sum": item[3],
                "description":item[4],
                "photo":json.loads(item[5])
            }
        for item in self.apartments[callback.message.chat.id]:
            b = InlineKeyboardButton(text=f"{item}", callback_data=f"show-apartment-this-name-{item}")
            kb.add(b)
        
        b = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="admin-back-to-main")
        kb.add(b)

        self.bot.edit_message_text(chat_id=callback.message.chat.id,
                                   message_id=callback.message.message_id,
                                   text="<b>"+self.text["show-1"]+"</b>",
                                   reply_markup=kb, 
                                   parse_mode="HTML")
        
        
        if callback.message.chat.id in self.show_photo_img:
            if self.show_photo_img[callback.message.chat.id] != []:
                for msg in self.show_photo_img[callback.message.chat.id]:
                    self.bot.delete_message(chat_id=callback.message.chat.id, message_id=msg.message_id)
                self.show_photo_img[callback.message.chat.id]=[]
        
    def show_apartment_2(self, callback):
        name = callback.data.replace("show-apartment-this-name-", "")
        print(self.apartments[callback.message.chat.id])
        apartment = self.apartments[callback.message.chat.id][name]

        # –ó–∞–º–µ–Ω–∞ callback –Ω–∞–∑–≤–∞–Ω–∏–π –Ω–∞ –†—É—Å—Å–∫–∏–µ
        apartment["type"] = apartment["type"].replace("comm_apartment", "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å").replace("apartment", "–ö–≤–∞—Ä—Ç–∏—Ä–∞").replace("house", "–î–æ–º")
        apartment["location"] = apartment["location"].replace("by_the_sea", "–£ –º–æ—Ä—è").replace("in_the_mountains", "–í –≥–æ—Ä–∞—Ö")
        if apartment["type"]=="–ö–≤–∞—Ä—Ç–∏—Ä–∞":apartment["sum"]=apartment["sum"].replace("sum-1", "–î–æ 20 –º–ª–Ω —Ä—É–±").replace("sum-2", "–î–æ 50 –º–ª–Ω —Ä—É–±").replace("–î–æ 100 –º–ª–Ω —Ä—É–±", "–û—Ç 100 –º–ª–Ω —Ä—É–±")
        if apartment["type"]=="–î–æ–º":apartment["sum"]=apartment["sum"].replace("sum-1", "–î–æ 50 –º–ª–Ω —Ä—É–±").replace("sum-2", "–î–æ 100 –º–ª–Ω —Ä—É–±").replace("–î–æ 500 –º–ª–Ω —Ä—É–±", "–û—Ç 500 –º–ª–Ω —Ä—É–±")
        else:apartment["sum"]=apartment["sum"].replace("sum-1", "–î–æ 100 –º–ª–Ω —Ä—É–±").replace("sum-2", "–î–æ 500 –º–ª–Ω —Ä—É–±").replace("–û—Ç 500 –º–ª–Ω —Ä—É–±", "–û—Ç 100 –º–ª–Ω —Ä—É–±")
        
        
        text =f"""
–ö–∞—Ä—Ç–æ—á–∫–∞ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º: {apartment['name']}

–¢–∏–ø: {apartment['type']}
–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {apartment['location']}
–¶–µ–Ω–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {apartment['sum']}

–û–ø–∏—Å–∞–Ω–∏–µ:
{apartment['description']}

""" 
        kb = InlineKeyboardMarkup()
        b = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="show-apartment")
        kb.add(b)
        self.bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text = "<b>"+text+"</b>", reply_markup=kb, parse_mode="HTML")
        if len(apartment['photo'])>=1:
            self.show_photo_img[callback.message.chat.id]=self.bot.send_media_group(chat_id=callback.message.chat.id, media=[telebot.types.InputMediaPhoto(open(dir, 'rb')) for dir in apartment['photo']])
            # print(self.show_photo_img[callback.message.chat.id].message_id)
        


    def delete_apartment_start(self, callback):
        kb = InlineKeyboardMarkup()
        self.delete_apartments[callback.message.chat.id] = {}
        for item in database.get_all("None", name="apartment"):
            self.delete_apartments[callback.message.chat.id][item[0]] = {
                "name":item[0],
                "type":item[1],
                "location":item[2],
                "sum": item[3],
                "description":item[4],
                "photo":json.loads(item[5])
            }


        for item in self.delete_apartments[callback.message.chat.id]:
            b = InlineKeyboardButton(text=f"{item}", callback_data=f"delete-apartment-this-name-{item}")
            kb.add(b)
        
        b = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="admin-back-to-main")
        kb.add(b)

        self.bot.edit_message_text(chat_id=callback.message.chat.id,
                                   message_id=callback.message.message_id,
                                   text="<b>"+self.text["delete-1"]+"</b>",
                                   reply_markup=kb, 
                                   parse_mode="HTML")
        
    def delete_apartment_2(self, callback):
        name = callback.data.replace("delete-apartment-this-name-", "")
        self.db.delete(id=name, name="apartment")
        self.bot.edit_message_text(chat_id=callback.message.chat.id,
                                   message_id=callback.message.message_id,
                                   text="<b>"+self.text["delete-2"]+"</b>",
                                   parse_mode="HTML")



class admin_user():
    def __init__(self, bot, text):
        self.db = database()
        self.bot = bot
        self.text={
            "delete-1":"–í—ã–±–µ—Ä–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Öüëá",
            "delete-2":"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–ª–æ —É–¥–∞–ª–µ–Ω!"
        }
    

    def get_list_user_start(self, callback):
        users={}
        for item in self.db.get_all("user"):
            users[str(item[0])] = {
                "id":item[0],
                "phone":item[1],
                "name":item[2],
                "last_use":item[3]
            }
        text="–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:"
        for i in users:
            text+=f"""

–ò–º—è:@{users[i]['name']}
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {'None' if users[i]['phone']=='' else users[i]['phone']}
–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –±—ã–ª –≤ —Å–µ—Ç–∏: {users[i]['last_use']}
ID —á–∞—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {users[i]['id']}"""
            
        kb = InlineKeyboardMarkup()
        b = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="admin-back-to-main")
        kb.add(b)
        self.bot.edit_message_text(chat_id=callback.message.chat.id,
                                    message_id=callback.message.message_id,
                                    text="<b>"+text+"</b>",
                                    reply_markup=kb,
                                    parse_mode="HTML")

    def delete_user_start(self, callback):
        kb = InlineKeyboardMarkup()
        for item in self.db.get_all("user"):
            b = InlineKeyboardButton(text=item[2], callback_data=f"delete-user-this-name-{item[2]}")
            kb.add(b)
        b = InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="admin-back-to-main")
        kb.add(b)

        self.bot.edit_message_text(chat_id=callback.message.chat.id,
                                   message_id=callback.message.message_id,
                                   text="<b>"+self.text["delete-1"]+"</b>",
                                   reply_markup=kb,
                                   parse_mode="HTML")
        
    def delete_user_2(self, callback):
        name_user=callback.data.replace("delete-user-this-name-", "")
        for item in self.db.get_all("user"):
            if item[2]==name_user:
                id_user=item[0]
        self.db.delete(id=id_user, name="user")

        self.bot.edit_message_text(chat_id=callback.message.chat.id,
                                   message_id=callback.message.message_id,
                                   text="<b>"+self.text["delete-2"]+"</b>",
                                   parse_mode="HTML")
